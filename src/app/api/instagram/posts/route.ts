// app/api/instagram/posts/route.ts
import { NextRequest, NextResponse } from "next/server";

// Instagram Basic Display API configuration
const INSTAGRAM_API_BASE = "https://graph.instagram.com";
const INSTAGRAM_BUSINESS_ACCOUNT_ID =
  process.env["INSTAGRAM_BUSINESS_ACCOUNT_ID"];
const INSTAGRAM_ACCESS_TOKEN = process.env["INSTAGRAM_ACCESS_TOKEN"];

interface InstagramPost {
  id: string;
  media_type: "IMAGE" | "VIDEO" | "CAROUSEL_ALBUM";
  media_url: string;
  thumbnail_url?: string;
  permalink: string;
  caption?: string;
  timestamp: string;
  like_count: number;
  comments_count: number;
}

interface InstagramMediaResponse {
  data: Array<{
    id: string;
    media_type: "IMAGE" | "VIDEO" | "CAROUSEL_ALBUM";
    media_url: string;
    thumbnail_url?: string;
    permalink: string;
    caption?: string;
    timestamp: string;
    like_count?: number;
    comments_count?: number;
  }>;
  paging?: {
    cursors: {
      before: string;
      after: string;
    };
    next?: string;
  };
}

// –ö–µ—à –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å—Ç–æ–≤
const cache = new Map<string, { data: InstagramPost[]; timestamp: number }>();
const CACHE_DURATION = 30 * 60 * 1000; // 30 –º–∏–Ω—É—Ç

export async function GET(request: NextRequest) {
  const { searchParams } = new URL(request.url);
  const limit = parseInt(searchParams.get("limit") || "3", 10);

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (!INSTAGRAM_BUSINESS_ACCOUNT_ID || !INSTAGRAM_ACCESS_TOKEN) {
      console.warn("Instagram API credentials not configured");
      return NextResponse.json(getMockPosts(limit));
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–µ—à
    const cacheKey = `instagram-posts-${limit}`;
    const cached = cache.get(cacheKey);

    if (cached && Date.now() - cached.timestamp < CACHE_DURATION) {
      return NextResponse.json(cached.data);
    }

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ—Å—Ç—ã –∏–∑ Instagram API
    const fields = [
      "id",
      "media_type",
      "media_url",
      "thumbnail_url",
      "permalink",
      "caption",
      "timestamp",
      "like_count",
      "comments_count",
    ].join(",");

    const url = `${INSTAGRAM_API_BASE}/${INSTAGRAM_BUSINESS_ACCOUNT_ID}/media?fields=${fields}&limit=${limit}&access_token=${INSTAGRAM_ACCESS_TOKEN}`;

    const response = await fetch(url, {
      next: { revalidate: 1800 }, // –†–µ–≤–∞–ª–∏–¥–∞—Ü–∏—è –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
    });

    if (!response.ok) {
      throw new Error(`Instagram API error: ${response.status}`);
    }

    const data: InstagramMediaResponse = await response.json();

    // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–∏—Å–∫–ª—é—á–∞–µ–º –≤–∏–¥–µ–æ –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è)
    const posts = data.data
      .filter(
        (post) =>
          post.media_type === "IMAGE" || post.media_type === "CAROUSEL_ALBUM",
      )
      .map((post) => ({
        id: post.id,
        media_type: post.media_type,
        media_url: post.media_url,
        thumbnail_url: post.thumbnail_url,
        permalink: post.permalink,
        caption: post.caption,
        timestamp: post.timestamp,
        like_count: post.like_count || 0,
        comments_count: post.comments_count || 0,
      }));

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–µ—à
    cache.set(cacheKey, {
      data: posts,
      timestamp: Date.now(),
    });

    return NextResponse.json(posts);
  } catch (error: unknown) {
    console.error("Error fetching Instagram posts:", error);

    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–æ–∫–∞–ø –¥–∞–Ω–Ω—ã–µ
    return NextResponse.json(getMockPosts(limit));
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –º–æ–∫–∞–ø –¥–∞–Ω–Ω—ã—Ö
function getMockPosts(limit: number): InstagramPost[] {
  const mockPosts = [
    {
      id: "mock_1",
      media_type: "IMAGE" as const,
      media_url: "/images/instagram/post1.jpg",
      permalink: "https://instagram.com/p/mock1",
      caption:
        "‚ú® –ù–æ–≤–∏–Ω–∫–∏ Holy Land —É–∂–µ –≤ –Ω–∞–ª–∏—á–∏–∏! –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ—Å–º–µ—Ç–∏–∫–∞ –¥–ª—è –≤–∞—à–µ–π –∫—Ä–∞—Å–æ—Ç—ã üí´\n\n#arannati #holylandcosmetics #–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è–∫–æ—Å–º–µ—Ç–∏–∫–∞ #–∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏–∞–ª–º–∞—Ç—ã #—É—Ö–æ–¥–∑–∞–∫–æ–∂–µ–π",
      timestamp: new Date().toISOString(),
      like_count: 234,
      comments_count: 12,
    },
    {
      id: "mock_2",
      media_type: "IMAGE" as const,
      media_url: "/images/instagram/post2.jpg",
      permalink: "https://instagram.com/p/mock2",
      caption:
        "üåø –°–µ–º–∏–Ω–∞—Ä –ø–æ —É—Ö–æ–¥—É –∑–∞ –∫–æ–∂–µ–π —Å —ç–∫—Å–ø–µ—Ä—Ç–∞–º–∏ Christina!\n\nüìÖ 15 —è–Ω–≤–∞—Ä—è\nüìç –ê–ª–º–∞—Ç—ã, —É–ª. –ú–∞–∫–∞—Ç–∞–µ–≤–∞ 127/11\n\n–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∞! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ.\n\n#arannati #christina #–æ–±—É—á–µ–Ω–∏–µ–∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–æ–≤ #—Å–µ–º–∏–Ω–∞—Ä—ã–∞–ª–º–∞—Ç—ã",
      timestamp: new Date(Date.now() - 86400000).toISOString(),
      like_count: 189,
      comments_count: 8,
    },
    {
      id: "mock_3",
      media_type: "IMAGE" as const,
      media_url: "/images/instagram/post3.jpg",
      permalink: "https://instagram.com/p/mock3",
      caption:
        "üíÜ‚Äç‚ôÄÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ª–∏–Ω–µ–π–∫–∏ Janssen Cosmetics\n\n–î–æ/–ü–æ—Å–ª–µ –∫—É—Ä—Å–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –∫–æ—Å–º–µ—Ç–∏–∫–∏ Janssen.\n\n–í–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã –±—É–¥—É—Ç –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ! üåü\n\n#arannati #janssencosmetics #—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã–¥–æ–∏–ø–æ—Å–ª–µ #–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π—É—Ö–æ–¥",
      timestamp: new Date(Date.now() - 172800000).toISOString(),
      like_count: 312,
      comments_count: 24,
    },
    {
      id: "mock_4",
      media_type: "IMAGE" as const,
      media_url: "/images/instagram/post4.jpg",
      permalink: "https://instagram.com/p/mock4",
      caption:
        "üéÅ –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–æ–≤!\n\n–ü—Ä–∏ –ø–æ–∫—É–ø–∫–µ –æ—Ç 100 000 —Ç–≥ - —Å–∫–∏–¥–∫–∞ 15% –Ω–∞ –≤—Å—é –ª–∏–Ω–µ–π–∫—É Image Skincare\n\n–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ –∫–æ–Ω—Ü–∞ —è–Ω–≤–∞—Ä—è!\n\n#arannati #—Å–∫–∏–¥–∫–∏ #—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ",
      timestamp: new Date(Date.now() - 259200000).toISOString(),
      like_count: 156,
      comments_count: 19,
    },
    {
      id: "mock_5",
      media_type: "IMAGE" as const,
      media_url: "/images/instagram/post5.jpg",
      permalink: "https://instagram.com/p/mock5",
      caption:
        "üìö –ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è –≤ –±–ª–æ–≥–µ: '–ü–µ–ø—Ç–∏–¥—ã –≤ –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏–∏: –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –∏ –∫–æ–≥–¥–∞ –ø—Ä–∏–º–µ–Ω—è—Ç—å'\n\n–ß–∏—Ç–∞–π—Ç–µ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ!\n\n#arannati #–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ #–ø–µ–ø—Ç–∏–¥—ã #–∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è",
      timestamp: new Date(Date.now() - 345600000).toISOString(),
      like_count: 98,
      comments_count: 5,
    },
  ];

  return mockPosts.slice(0, limit);
}
